/*
 * generated by Fujaba - CodeGen2
 */
package org.ut.sm.mancala.client;
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import javax.swing.JButton;


public class Kahala extends JButton
{



   public  Kahala (String label )
   {

      //Statement
      super(label);
      return ;
   }

   /**
    * <pre>
    *           0..1     next     0..1
    * Kahala ------------------------- Cup
    *           kahala               cup
    * </pre>
    */
   public static final String PROPERTY_CUP = "cup";

   @Property( name = PROPERTY_CUP, partner = Cup.PROPERTY_KAHALA, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Cup cup;

   @Property( name = PROPERTY_CUP )
   public boolean setCup (Cup value)
   {
      boolean changed = false;

      if (this.cup != value)
      {
      
         Cup oldValue = this.cup;
         Kahala source = this;
         if (this.cup != null)
         {
            this.cup = null;
            oldValue.setKahala (null);
         }
         this.cup = value;

         if (value != null)
         {
            value.setKahala (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_CUP )
   public Kahala withCup (Cup value)
   {
      setCup (value);
      return this;
   }

   public Cup getCup ()
   {
      return this.cup;
   }

   public int getStones ()
   {

      return Integer.parseInt(getText().trim());
   }

   public static final String PROPERTY_NUM_OFSTONES = "numOfstones";

   @Property( name = PROPERTY_NUM_OFSTONES, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private int numOfstones;

   @Property( name = PROPERTY_NUM_OFSTONES )
   public void setNumOfstones (int value)
   {
      this.numOfstones = value;
   }

   public Kahala withNumOfstones (int value)
   {
      setNumOfstones (value);
      return this;
   }

   @Property( name = PROPERTY_NUM_OFSTONES )
   public int getNumOfstones ()
   {
      return this.numOfstones;
   }

   /**
    * <pre>
    *           0..1     has     1
    * Kahala ------------------------- Player
    *           kahala               player
    * </pre>
    */
   public static final String PROPERTY_PLAYER = "player";

   @Property( name = PROPERTY_PLAYER, partner = Player.PROPERTY_KAHALA, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Player player;

   @Property( name = PROPERTY_PLAYER )
   public boolean setPlayer (Player value)
   {
      boolean changed = false;

      if (this.player != value)
      {
      
         Player oldValue = this.player;
         Kahala source = this;
         if (this.player != null)
         {
            this.player = null;
            oldValue.setKahala (null);
         }
         this.player = value;

         if (value != null)
         {
            value.setKahala (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_PLAYER )
   public Kahala withPlayer (Player value)
   {
      setPlayer (value);
      return this;
   }

   public Player getPlayer ()
   {
      return this.player;
   }

   public void setStones (int stones )
   {

      //Statement

      this.setText( Integer.toString(stones));
      this.numOfstones=stones;


      return ;
   }

   public void removeYou()
   {
      this.setCup (null);
      this.setPlayer (null);
   }
}


